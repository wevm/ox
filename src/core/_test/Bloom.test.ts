import { Bloom } from 'ox'
import { describe, expect, test } from 'vitest'

describe('contains', () => {
  test('default', () => {
    expect(
      Bloom.contains(
        '0x
        '0xef2d6d194084c2de36e0dabfce45d046b37d1106',
      ),
    ).toBeTruthy()
    expect(
      Bloom.contains(
        '0x
        '0x02c69be41d0b7e40352fc85be1cd65eb03d40ef8427a0ca4596b1ead9a00e9fc',
      ),
    ).toBeTruthy()
    expect(
      Bloom.contains(
        '0x
        '0xef2d6d194084c2de36e0dabfce45d046b37d1106',
      ),
    ).toBeFalsy()
    expect(
      Bloom.contains(
        '0x
        '0x02c69be41d0b7e40352fc85be1cd65eb03d40ef8427a0ca4596b1ead9a00e9fc',
      ),
    ).toBeFalsy()
    expect(
      Bloom.contains(
        '0x
        '0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb',
      ),
    ).toBeTruthy()
  })
})

describe('validate', () => {
  test('checks if bloom is valid', () => {
    expect(
      Bloom.validate('a5cc3c03994db5b0d9a5eEdD10Cabab0813678ac'),
    ).toBeFalsy()
    expect(
      Bloom.validate('0xa5cc3c03994db5b0d9a5eEdD10Cabab0813678ac'),
    ).toBeFalsy()
    expect(
      Bloom.validate(
        '0x
      ),
    ).toBeFalsy()
    expect(
      Bloom.validate(
        '0x
      ),
    ).toBeTruthy()
  })
})
