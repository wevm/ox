import type { Address } from '../Address/types.js'
import type { Hex } from '../Hex/types.js'
import type { Log } from '../Log/types.js'
import type { Compute } from '../types.js'

/** An Transaction Receipt as defined in the [Execution API specification](https://github.com/ethereum/execution-apis/blob/main/src/schemas/receipt.yaml). */
export type TransactionReceipt<
  status = 'success' | 'reverted',
  type = TransactionReceipt_Type,
  bigintType = bigint,
  numberType = number,
> = Compute<{
  /** The actual value per gas deducted from the sender's account for blob gas. Only specified for blob transactions as defined by EIP-4844. */
  blobGasPrice?: bigintType | undefined
  /** The amount of blob gas used. Only specified for blob transactions as defined by EIP-4844. */
  blobGasUsed?: bigintType | undefined
  /** Hash of block containing this transaction */
  blockHash: Hex
  /** Number of block containing this transaction */
  blockNumber: bigintType
  /** Address of new contract or `null` if no contract was created */
  contractAddress?: Address | null | undefined
  /** Gas used by this and all preceding transactions in this block */
  cumulativeGasUsed: bigintType
  /** Pre-London, it is equal to the transaction's gasPrice. Post-London, it is equal to the actual gas price paid for inclusion. */
  effectiveGasPrice: bigintType
  /** Transaction sender */
  from: Address
  /** Gas used by this transaction */
  gasUsed: bigintType
  /** List of log objects generated by this transaction */
  logs: Log<false, bigintType, numberType>[]
  /** Logs bloom filter */
  logsBloom: Hex
  /** The post-transaction state root. Only specified for transactions included before the Byzantium upgrade. */
  root?: Hex | undefined
  /** `success` if this transaction was successful or `reverted` if it failed */
  status: status
  /** Transaction recipient or `null` if deploying a contract */
  to: Address | null
  /** Hash of this transaction */
  transactionHash: Hex
  /** Index of this transaction in the block */
  transactionIndex: numberType
  /** Transaction type */
  type: type
}>

/** An RPC Transaction Receipt as defined in the [Execution API specification](https://github.com/ethereum/execution-apis/blob/main/src/schemas/receipt.yaml). */
export type TransactionReceipt_Rpc = TransactionReceipt<
  '0x0' | '0x1',
  TransactionReceipt_TypeRpc,
  Hex,
  Hex
>

/**
 * Union of Transaction Receipt types.
 *
 * - `legacy`
 * - `eip1559`
 * - `eip2930`
 * - `eip4844`
 * - `eip7702`
 * - any other string
 */
export type TransactionReceipt_Type =
  | 'legacy'
  | 'eip1559'
  | 'eip2930'
  | 'eip4844'
  | 'eip7702'
  | (string & {})

/**
 * Union of RPC Transaction Receipt types.
 *
 * - `0x0`: legacy transactions
 * - `0x1`: EIP-1559 transactions
 * - `0x2`: EIP-2930 transactions
 * - `0x3`: EIP-4844 transactions
 * - `0x4`: EIP-7702 transactions
 * - any other string
 */
export type TransactionReceipt_TypeRpc =
  | '0x0'
  | '0x1'
  | '0x2'
  | '0x3'
  | '0x4'
  | (string & {})
