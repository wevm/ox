{
  "name": "ox",
  "private": true,
  "type": "module",
  "scripts": {
    "bench": "vitest -c ./test/vitest.config.ts bench",
    "bench:types": "TYPES=true vitest -c ./test/vitest.config.ts src/**/*.bench-d.ts",
    "build": "pnpm clean && pnpm build:cjs && pnpm build:esm && pnpm build:types",
    "build:esm": "tsc --project ./tsconfig.build.json --module es2020 --outDir ./src/_esm && printf '{\"type\": \"module\",\"sideEffects\":false}' > ./src/_esm/package.json",
    "build:cjs": "tsc --project ./tsconfig.build.json --module commonjs --outDir ./src/_cjs --removeComments --verbatimModuleSyntax false && printf '{\"type\":\"commonjs\"}' > ./src/_cjs/package.json",
    "build:types": "tsc --project ./tsconfig.build.json --module esnext --declarationDir ./src/_types --emitDeclarationOnly --declaration --declarationMap",
    "changeset:prepublish": "pnpm version:update && pnpm build && tsx scripts/prepublish.ts",
    "changeset:publish": "pnpm changeset:prepublish && changeset publish",
    "changeset:version": "changeset version && pnpm version:update && pnpm format",
    "check": "biome check . --fix --unsafe",
    "check:repo": "sherif",
    "check:tsdoc": "eslint src -c scripts/docgen/tsdoc.config.js --ignore-pattern 'src/_esm/**/*.js'",
    "check:types": "tsc --noEmit",
    "clean": "rimraf src/_types src/_esm src/_cjs ./tsconfig.build.tsbuildinfo src/tsconfig.build.tsbuildinfo",
    "contracts:build": "forge build --config-path ./contracts/foundry.toml && tsx contracts/scripts/generate-typed-artifacts.ts",
    "deps": "pnpx taze -r",
    "dev": "pnpm preconstruct && pnpm playground",
    "docs:dev": "pnpm --filter site dev",
    "docs:extract": "pnpm api-extractor run -c scripts/docgen/api-extractor.json && tsx scripts/docgen/build.ts",
    "docs:gen": "pnpm clean && pnpm build:types && pnpm docs:extract",
    "docs:build": "pnpm docs:gen && pnpm --filter site build",
    "knip": "knip --production",
    "format": "biome format --write",
    "postinstall": "git submodule update --init --recursive && pnpm contracts:build && pnpm preconstruct",
    "preconstruct": "tsx ./scripts/preconstruct.ts",
    "preinstall": "pnpx only-allow pnpm",
    "prepare": "pnpm simple-git-hooks",
    "size": "size-limit",
    "test": "vitest -c ./test/vitest.config.ts",
    "test:ci": "CI=true vitest -c ./test/vitest.config.ts --coverage --retry=3 --bail=1",
    "test:cov": "vitest -c ./test/vitest.config.ts --coverage",
    "test:types": "TYPES=true vitest -c ./test/vitest.config.ts",
    "vectors": "bun test vectors/**/*.test.ts",
    "vectors:generate": "bun vectors/generate.ts",
    "version:update": "tsx ./scripts/update-version.ts"
  },
  "devDependencies": {
    "@ark/attest": "^0.16.0",
    "@biomejs/biome": "^1.8.3",
    "@changesets/changelog-github": "^0.5.0",
    "@changesets/cli": "^2.27.7",
    "@ethereumjs/rlp": "^5.0.2",
    "@ethereumjs/util": "^9.0.3",
    "@microsoft/api-extractor": "^7.47.7",
    "@microsoft/api-extractor-model": "^7.29.6",
    "@microsoft/tsdoc": "^0.15.0",
    "@microsoft/tsdoc-config": "^0.17.0",
    "@size-limit/preset-big-lib": "^11.1.4",
    "@types/bun": "^1.1.6",
    "@types/fs-extra": "^11.0.4",
    "@types/node": "^22.5.4",
    "@vitest/coverage-v8": "1.0.4",
    "bun": "^1.1.24",
    "c-kzg": "^2.1.2",
    "eslint": "^9.9.0",
    "eslint-plugin-jsdoc": "^50.0.1",
    "eslint-plugin-tsdoc": "^0.3.0",
    "ethers": "^6.13.2",
    "fs-extra": "^11.2.0",
    "knip": "^5.27.2",
    "prool": "^0.0.16",
    "rimraf": "^5.0.10",
    "sherif": "^0.11.0",
    "simple-git-hooks": "^2.11.1",
    "size-limit": "^11.1.4",
    "ts-morph": "^24.0.0",
    "tsx": "^4.17.0",
    "typescript": "^5.5.4",
    "typescript-eslint": "^8.1.0",
    "viem": "^2.21.9",
    "vite-tsconfig-paths": "^5.0.1",
    "vitest": "1.0.4",
    "web3": "^4.12.1"
  },
  "packageManager": "pnpm@9.7.0",
  "engines": {
    "node": ">=22"
  },
  "simple-git-hooks": {
    "pre-commit": "pnpm check"
  },
  "knip": {
    "ignore": [
      ".github/**",
      "scripts/**",
      "test/**",
      "vectors/**",
      "src/package.json",
      "tsdoc.config.js"
    ],
    "ignoreBinaries": ["dev", "forge", "only-allow", "printf"],
    "ignoreDependencies": ["@size-limit/preset-big-lib"],
    "vitest": {
      "config": ["test/vitest.config.ts"],
      "entry": ["**/*.{bench,bench-d,test,test-d,spec}.?(c|m)[jt]s?(x)"]
    },
    "workspaces": {
      "src": {
        "entry": ["index.ts!", "node/index.ts!"]
      }
    }
  },
  "pnpm": {
    "overrides": {
      "@microsoft/api-extractor>typescript": "^5.5.4"
    },
    "patchedDependencies": {
      "size-limit@11.1.4": "patches/size-limit@11.1.4.patch"
    }
  },
  "size-limit": [
    {
      "name": "import * from 'ox'",
      "path": "./src/_esm/index.js",
      "import": "*"
    },
    {
      "name": "import * as Abi from 'ox/Abi'",
      "path": "./src/_esm/Abi.js",
      "import": "*"
    },
    {
      "name": "import * as AbiConstructor from 'ox/AbiConstructor'",
      "path": "./src/_esm/AbiConstructor.js",
      "import": "*"
    },
    {
      "name": "import * as AbiError from 'ox/AbiError'",
      "path": "./src/_esm/AbiError.js",
      "import": "*"
    },
    {
      "name": "import * as AbiEvent from 'ox/AbiEvent'",
      "path": "./src/_esm/AbiEvent.js",
      "import": "*"
    },
    {
      "name": "import * as AbiFunction from 'ox/AbiFunction'",
      "path": "./src/_esm/AbiFunction.js",
      "import": "*"
    },
    {
      "name": "import * as AbiItem from 'ox/AbiItem'",
      "path": "./src/_esm/AbiItem.js",
      "import": "*"
    },
    {
      "name": "import * as AbiParameters from 'ox/AbiParameters'",
      "path": "./src/_esm/AbiParameters.js",
      "import": "*"
    },
    {
      "name": "import * as Address from 'ox/Address'",
      "path": "./src/_esm/Address.js",
      "import": "*"
    },
    {
      "name": "import * as Base64 from 'ox/Base64'",
      "path": "./src/_esm/Base64.js",
      "import": "*"
    },
    {
      "name": "import * as Block from 'ox/Block'",
      "path": "./src/_esm/Block.js",
      "import": "*"
    },
    {
      "name": "import * as Bloom from 'ox/Bloom'",
      "path": "./src/_esm/Bloom.js",
      "import": "*"
    },
    {
      "name": "import * as Bytes from 'ox/Bytes'",
      "path": "./src/_esm/Bytes.js",
      "import": "*"
    },
    {
      "name": "import * as ContractAddress from 'ox/ContractAddress'",
      "path": "./src/_esm/ContractAddress.js",
      "import": "*"
    },
    {
      "name": "import * as Errors from 'ox/Errors'",
      "path": "./src/_esm/Errors.js",
      "import": "*"
    },
    {
      "name": "import * as Hex from 'ox/Hex'",
      "path": "./src/_esm/Hex.js",
      "import": "*"
    },
    {
      "name": "import * as Kzg from 'ox/Kzg'",
      "path": "./src/_esm/Kzg.js",
      "import": "*"
    },
    {
      "name": "import * as Log from 'ox/Log'",
      "path": "./src/_esm/Log.js",
      "import": "*"
    },
    {
      "name": "import * as PersonalMessage from 'ox/PersonalMessage'",
      "path": "./src/_esm/PersonalMessage.js",
      "import": "*"
    },
    {
      "name": "import * as Provider from 'ox/Provider'",
      "path": "./src/_esm/Provider.js",
      "import": "*"
    },
    {
      "name": "import * as PublicKey from 'ox/PublicKey'",
      "path": "./src/_esm/PublicKey.js",
      "import": "*"
    },
    {
      "name": "import * as Rlp from 'ox/Rlp'",
      "path": "./src/_esm/Rlp.js",
      "import": "*"
    },
    {
      "name": "import * as RpcRequest from 'ox/RpcRequest'",
      "path": "./src/_esm/RpcRequest.js",
      "import": "*"
    },
    {
      "name": "import * as RpcResponse from 'ox/RpcResponse'",
      "path": "./src/_esm/RpcResponse.js",
      "import": "*"
    },
    {
      "name": "import * as Secp256k1 from 'ox/Secp256k1'",
      "path": "./src/_esm/Secp256k1.js",
      "import": "*"
    },
    {
      "name": "import * as Signature from 'ox/Signature'",
      "path": "./src/_esm/Signature.js",
      "import": "*"
    },
    {
      "name": "import * as Siwe from 'ox/Siwe'",
      "path": "./src/_esm/Siwe.js",
      "import": "*"
    },
    {
      "name": "import * as Transaction from 'ox/Transaction'",
      "path": "./src/_esm/Transaction.js",
      "import": "*"
    },
    {
      "name": "import * as TransactionEnvelope from 'ox/TransactionEnvelope'",
      "path": "./src/_esm/TransactionEnvelope.js",
      "import": "*"
    },
    {
      "name": "import * as TransactionReceipt from 'ox/TransactionReceipt'",
      "path": "./src/_esm/TransactionReceipt.js",
      "import": "*"
    },
    {
      "name": "import * as TypedData from 'ox/TypedData'",
      "path": "./src/_esm/TypedData.js",
      "import": "*"
    },
    {
      "name": "import * as Value from 'ox/Value'",
      "path": "./src/_esm/Value.js",
      "import": "*"
    }
  ]
}
